// <auto-generated />
using System;
using Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(AppDbcontext))]
    [Migration("20230407221149_cargaDeMercaderia")]
    partial class cargaDeMercaderia
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.Entities.Comanda", b =>
                {
                    b.Property<Guid>("ComandaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<int>("FormaEntregaId")
                        .HasColumnType("int");

                    b.Property<int>("PrecioTotal")
                        .HasColumnType("int");

                    b.HasKey("ComandaId");

                    b.HasIndex("FormaEntregaId");

                    b.ToTable("Comandas");
                });

            modelBuilder.Entity("Domain.Entities.ComandaMercaderia", b =>
                {
                    b.Property<int>("ComandaMercaderiaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ComandaMercaderiaId"));

                    b.Property<Guid>("ComandaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("MercaderiaId")
                        .HasColumnType("int");

                    b.HasKey("ComandaMercaderiaId");

                    b.HasIndex("ComandaId");

                    b.HasIndex("MercaderiaId");

                    b.ToTable("comandaMercaderias");
                });

            modelBuilder.Entity("Domain.Entities.FormaEntrega", b =>
                {
                    b.Property<int>("FormaEntregaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FormaEntregaId"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("FormaEntregaId");

                    b.ToTable("FormaEntregas");

                    b.HasData(
                        new
                        {
                            FormaEntregaId = 10,
                            Descripcion = "Salon"
                        },
                        new
                        {
                            FormaEntregaId = 20,
                            Descripcion = "Delivery"
                        },
                        new
                        {
                            FormaEntregaId = 30,
                            Descripcion = "Pedidos Ya"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Mercaderia", b =>
                {
                    b.Property<int>("MercaderiaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MercaderiaId"));

                    b.Property<string>("Imagen")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Ingredientes")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Precio")
                        .HasColumnType("int");

                    b.Property<string>("Preparacion")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("TipoMercaderiaId")
                        .HasColumnType("int");

                    b.HasKey("MercaderiaId");

                    b.HasIndex("TipoMercaderiaId");

                    b.ToTable("Mercaderias");

                    b.HasData(
                        new
                        {
                            MercaderiaId = 10,
                            Imagen = "un foton..",
                            Ingredientes = "cebolla",
                            Nombre = "Pizza de cebolla",
                            Precio = 500,
                            Preparacion = "es un secreto..",
                            TipoMercaderiaId = 5
                        },
                        new
                        {
                            MercaderiaId = 20,
                            Imagen = "un foton..",
                            Ingredientes = "verduras",
                            Nombre = "Hamburguesa vegana",
                            Precio = 100,
                            Preparacion = "es un secreto..",
                            TipoMercaderiaId = 2
                        },
                        new
                        {
                            MercaderiaId = 30,
                            Imagen = "un foton..",
                            Ingredientes = "tomates",
                            Nombre = "Ensalada César",
                            Precio = 200,
                            Preparacion = "es un secreto..",
                            TipoMercaderiaId = 7
                        },
                        new
                        {
                            MercaderiaId = 40,
                            Imagen = "un foton..",
                            Ingredientes = "pescado",
                            Nombre = "Sushi",
                            Precio = 900,
                            Preparacion = "es un secreto..",
                            TipoMercaderiaId = 1
                        },
                        new
                        {
                            MercaderiaId = 50,
                            Imagen = "un foton..",
                            Ingredientes = "pollo",
                            Nombre = "Pollo a la parrilla",
                            Precio = 700,
                            Preparacion = "es un secreto..",
                            TipoMercaderiaId = 1
                        },
                        new
                        {
                            MercaderiaId = 60,
                            Imagen = "un foton..",
                            Ingredientes = "pollito",
                            Nombre = "Fajitas de pollo",
                            Precio = 800,
                            Preparacion = "es un secreto..",
                            TipoMercaderiaId = 1
                        },
                        new
                        {
                            MercaderiaId = 70,
                            Imagen = "un foton..",
                            Ingredientes = "tortilla",
                            Nombre = "Tacos",
                            Precio = 900,
                            Preparacion = "es un secreto..",
                            TipoMercaderiaId = 1
                        },
                        new
                        {
                            MercaderiaId = 80,
                            Imagen = "un foton..",
                            Ingredientes = "fideos",
                            Nombre = "Spaghetti a la boloñesa",
                            Precio = 100,
                            Preparacion = "es un secreto..",
                            TipoMercaderiaId = 1
                        },
                        new
                        {
                            MercaderiaId = 90,
                            Imagen = "un foton..",
                            Ingredientes = "papas",
                            Nombre = "Paella",
                            Precio = 900,
                            Preparacion = "es un secreto..",
                            TipoMercaderiaId = 1
                        },
                        new
                        {
                            MercaderiaId = 110,
                            Imagen = "un foton..",
                            Ingredientes = "sal",
                            Nombre = "Curry de pollo",
                            Precio = 200,
                            Preparacion = "es un secreto..",
                            TipoMercaderiaId = 1
                        },
                        new
                        {
                            MercaderiaId = 120,
                            Imagen = "un foton..",
                            Ingredientes = "fideo chino",
                            Nombre = "Fideos chinos salteados",
                            Precio = 900,
                            Preparacion = "es un secreto..",
                            TipoMercaderiaId = 1
                        },
                        new
                        {
                            MercaderiaId = 130,
                            Imagen = "un foton..",
                            Ingredientes = "chilis",
                            Nombre = "Chili con carne",
                            Precio = 300,
                            Preparacion = "es un secreto..",
                            TipoMercaderiaId = 1
                        },
                        new
                        {
                            MercaderiaId = 140,
                            Imagen = "un foton..",
                            Ingredientes = "frijoles",
                            Nombre = "Arroz con frijoles",
                            Precio = 900,
                            Preparacion = "es un secreto..",
                            TipoMercaderiaId = 1
                        },
                        new
                        {
                            MercaderiaId = 150,
                            Imagen = "un foton..",
                            Ingredientes = "carne de vaca",
                            Nombre = "Carne asada",
                            Precio = 600,
                            Preparacion = "es un secreto..",
                            TipoMercaderiaId = 1
                        },
                        new
                        {
                            MercaderiaId = 160,
                            Imagen = "un foton..",
                            Ingredientes = "filete",
                            Nombre = "Filete de salmón a la parrilla",
                            Precio = 300,
                            Preparacion = "es un secreto..",
                            TipoMercaderiaId = 1
                        },
                        new
                        {
                            MercaderiaId = 170,
                            Imagen = "un foton..",
                            Ingredientes = "fideos tirabuzon",
                            Nombre = "Guiso de carne",
                            Precio = 100,
                            Preparacion = "es un secreto..",
                            TipoMercaderiaId = 1
                        },
                        new
                        {
                            MercaderiaId = 180,
                            Imagen = "un foton..",
                            Ingredientes = "lechuga",
                            Nombre = "Estofado de verduras",
                            Precio = 700,
                            Preparacion = "es un secreto..",
                            TipoMercaderiaId = 1
                        },
                        new
                        {
                            MercaderiaId = 190,
                            Imagen = "un foton..",
                            Ingredientes = "tapa de empanada",
                            Nombre = "Empanadas",
                            Precio = 800,
                            Preparacion = "es un secreto..",
                            TipoMercaderiaId = 1
                        },
                        new
                        {
                            MercaderiaId = 200,
                            Imagen = "un foton..",
                            Ingredientes = "pavo",
                            Nombre = "Sandwich de pavo",
                            Precio = 600,
                            Preparacion = "es un secreto..",
                            TipoMercaderiaId = 1
                        },
                        new
                        {
                            MercaderiaId = 210,
                            Imagen = "un foton..",
                            Ingredientes = "papas",
                            Nombre = "Tortilla de patatas",
                            Precio = 100,
                            Preparacion = "es un secreto..",
                            TipoMercaderiaId = 1
                        });
                });

            modelBuilder.Entity("Domain.Entities.TipoMercaderia", b =>
                {
                    b.Property<int>("TipoMercaderiaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TipoMercaderiaId"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("TipoMercaderiaId");

                    b.ToTable("TipoMercaderias");

                    b.HasData(
                        new
                        {
                            TipoMercaderiaId = 1,
                            Descripcion = "Entrada"
                        },
                        new
                        {
                            TipoMercaderiaId = 2,
                            Descripcion = "Minutas"
                        },
                        new
                        {
                            TipoMercaderiaId = 3,
                            Descripcion = "Pastas"
                        },
                        new
                        {
                            TipoMercaderiaId = 4,
                            Descripcion = "Parilla"
                        },
                        new
                        {
                            TipoMercaderiaId = 5,
                            Descripcion = "Pizzas"
                        },
                        new
                        {
                            TipoMercaderiaId = 6,
                            Descripcion = "Sandwich"
                        },
                        new
                        {
                            TipoMercaderiaId = 7,
                            Descripcion = "Ensaladas"
                        },
                        new
                        {
                            TipoMercaderiaId = 8,
                            Descripcion = "Bebidas"
                        },
                        new
                        {
                            TipoMercaderiaId = 9,
                            Descripcion = "Cerveza artesanal"
                        },
                        new
                        {
                            TipoMercaderiaId = 10,
                            Descripcion = "Postres"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Comanda", b =>
                {
                    b.HasOne("Domain.Entities.FormaEntrega", "FormaEntrega")
                        .WithMany("comandas")
                        .HasForeignKey("FormaEntregaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FormaEntrega");
                });

            modelBuilder.Entity("Domain.Entities.ComandaMercaderia", b =>
                {
                    b.HasOne("Domain.Entities.Comanda", "Comanda")
                        .WithMany("ComandaMercaderias")
                        .HasForeignKey("ComandaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Mercaderia", "Mercaderia")
                        .WithMany("ComandaMercaderias")
                        .HasForeignKey("MercaderiaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Comanda");

                    b.Navigation("Mercaderia");
                });

            modelBuilder.Entity("Domain.Entities.Mercaderia", b =>
                {
                    b.HasOne("Domain.Entities.TipoMercaderia", "TipoMercaderia")
                        .WithMany("mercaderias")
                        .HasForeignKey("TipoMercaderiaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TipoMercaderia");
                });

            modelBuilder.Entity("Domain.Entities.Comanda", b =>
                {
                    b.Navigation("ComandaMercaderias");
                });

            modelBuilder.Entity("Domain.Entities.FormaEntrega", b =>
                {
                    b.Navigation("comandas");
                });

            modelBuilder.Entity("Domain.Entities.Mercaderia", b =>
                {
                    b.Navigation("ComandaMercaderias");
                });

            modelBuilder.Entity("Domain.Entities.TipoMercaderia", b =>
                {
                    b.Navigation("mercaderias");
                });
#pragma warning restore 612, 618
        }
    }
}
